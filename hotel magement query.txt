
Hotel Management SQL Project â€“ 10 Sample Questions & Answers

1. List all guests who have made bookings along with their check-in date and room number.
----------------------------------------------------------------------
SELECT 
    g.first_name,
    g.last_name,
    r.room_number,
    b.check_in_date
FROM Guests g
JOIN Bookings b ON g.guest_id = b.guest_id
JOIN Rooms r ON b.room_id = r.room_id;

2. Find the total number of bookings made for each hotel.
----------------------------------------------------------------------
SELECT 
    h.hotel_name,
    COUNT(b.booking_id) AS total_bookings
FROM Hotels h
JOIN Rooms r ON h.hotel_id = r.hotel_id
JOIN Bookings b ON r.room_id = b.room_id
GROUP BY h.hotel_name;

3. Get the list of guests who haven't made any bookings.
----------------------------------------------------------------------
SELECT 
    g.first_name,
    g.last_name
FROM Guests g
LEFT JOIN Bookings b ON g.guest_id = b.guest_id
WHERE b.booking_id IS NULL;

4. Show the total revenue generated by each hotel.
----------------------------------------------------------------------
SELECT 
    h.hotel_name,
    SUM(p.amount) AS total_revenue
FROM Hotels h
JOIN Rooms r ON h.hotel_id = r.hotel_id
JOIN Bookings b ON r.room_id = b.room_id
JOIN Payments p ON b.booking_id = p.booking_id
GROUP BY h.hotel_name;

5. Find the most popular room type across all hotels.
----------------------------------------------------------------------
SELECT 
    r.room_type,
    COUNT(b.booking_id) AS total_bookings
FROM Rooms r
JOIN Bookings b ON r.room_id = b.room_id
GROUP BY r.room_type
ORDER BY total_bookings DESC
LIMIT 1;

6. Retrieve details of guests who have made payments above $500.
----------------------------------------------------------------------
SELECT 
    g.first_name,
    g.last_name,
    p.amount,
    p.payment_date
FROM Guests g
JOIN Bookings b ON g.guest_id = b.guest_id
JOIN Payments p ON b.booking_id = p.booking_id
WHERE p.amount > 500;

7. Show the booking history for a specific guest (e.g., guest_id = 1).
----------------------------------------------------------------------
SELECT 
    b.booking_date,
    r.room_number,
    h.hotel_name,
    p.amount
FROM Bookings b
JOIN Rooms r ON b.room_id = r.room_id
JOIN Hotels h ON r.hotel_id = h.hotel_id
JOIN Payments p ON b.booking_id = p.booking_id
WHERE b.guest_id = 1;

8. List all rooms that are not currently booked.
----------------------------------------------------------------------
SELECT 
    r.room_id,
    r.room_number,
    r.room_type,
    h.hotel_name
FROM Rooms r
JOIN Hotels h ON r.hotel_id = h.hotel_id
LEFT JOIN Bookings b ON r.room_id = b.room_id
WHERE b.booking_id IS NULL;

9. Count how many rooms of each type exist per hotel.
----------------------------------------------------------------------
SELECT 
    h.hotel_name,
    r.room_type,
    COUNT(*) AS total_rooms
FROM Hotels h
JOIN Rooms r ON h.hotel_id = r.hotel_id
GROUP BY h.hotel_name, r.room_type;

10. List all guests with their total spending.
----------------------------------------------------------------------
SELECT 
    g.first_name,
    g.last_name,
    SUM(p.amount) AS total_spent
FROM Guests g
JOIN Bookings b ON g.guest_id = b.guest_id
JOIN Payments p ON b.booking_id = p.booking_id
GROUP BY g.first_name, g.last_name
ORDER BY total_spent DESC;
